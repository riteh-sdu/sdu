// 
// 	SDU_lab_1_1
//


#include "DSP2833x_Device.h"	// Headeri

#define RST_WD {EALLOW;SysCtrlRegs.WDKEY = 0x55;SysCtrlRegs.WDKEY = 0xAA;EDIS;}

void delay_loop(long);	// Delay funkcija

// These are defined by the linker (see F28335.cmd)
extern Uint16 RamfuncsLoadStart;
extern Uint16 RamfuncsLoadEnd;
extern Uint16 RamfuncsRunStart;
extern Uint16 RamfuncsLoadSize;


void main(void)
{
// Copy time critical code and Flash setup code to RAM
// This includes the following ISR functions: epwm1_timer_isr(), epwm2_timer_isr()
// epwm3_timer_isr and and InitFlash();
// The  RamfuncsLoadStart, RamfuncsLoadEnd, and RamfuncsRunStart
// symbols are created by the linker. Refer to the F28335.cmd file.

   memcpy(&RamfuncsRunStart, &RamfuncsLoadStart, (Uint32)&RamfuncsLoadSize);


	EALLOW;
	SysCtrlRegs.WDCR = 0x00AF;
	EDIS;

	SysCtrlRegs.PLLCR.bit.DIV = 10; //x10
	SysCtrlRegs.PLLSTS.bit.DIVSEL = 2; ///2

	EALLOW;
	GpioCtrlRegs.GPAMUX1.bit.GPIO9 = 0;
	GpioCtrlRegs.GPADIR.bit.GPIO9 = 1;
	GpioDataRegs.GPASET.bit.GPIO9 = 0;
	GpioCtrlRegs.GPAMUX1.bit.GPIO11 = 0;
	GpioCtrlRegs.GPADIR.bit.GPIO11 = 1;
	GpioDataRegs.GPASET.bit.GPIO11 = 0;
	GpioCtrlRegs.GPBMUX1.bit.GPIO34 = 0;
	GpioCtrlRegs.GPBDIR.bit.GPIO34 = 1;
	GpioDataRegs.GPBSET.bit.GPIO34 = 0;
	GpioCtrlRegs.GPBMUX2.bit.GPIO49 = 0;
	GpioCtrlRegs.GPBDIR.bit.GPIO49 = 1;
	GpioDataRegs.GPBSET.bit.GPIO49 = 0;
	EDIS;

	    while (1)
	    {
	    	RST_WD;

			delay_loop(1000000);
			GpioDataRegs.GPASET.bit.GPIO9 = 1;
			GpioDataRegs.GPACLEAR.bit.GPIO11 = 1;
			GpioDataRegs.GPBCLEAR.bit.GPIO34 = 1;
			GpioDataRegs.GPBCLEAR.bit.GPIO49 = 1;
			delay_loop(1000000);
			GpioDataRegs.GPACLEAR.bit.GPIO9 = 1;
			GpioDataRegs.GPASET.bit.GPIO11 = 1;
			delay_loop(1000000);
			GpioDataRegs.GPACLEAR.bit.GPIO11 = 1;
			GpioDataRegs.GPBSET.bit.GPIO34 = 1;
			delay_loop(1000000);
			GpioDataRegs.GPBCLEAR.bit.GPIO34 = 1;
			GpioDataRegs.GPBSET.bit.GPIO49 = 1;
			delay_loop(1000000);
			GpioDataRegs.GPBSET.bit.GPIO34 = 1;
			GpioDataRegs.GPBCLEAR.bit.GPIO49 = 1;
			delay_loop(1000000);
			GpioDataRegs.GPASET.bit.GPIO11 = 1;
			GpioDataRegs.GPBCLEAR.bit.GPIO34 = 1;
	    }
}

void delay_loop(long end)
{
	// Delay funkcija
	long i;
	for (i=0; i<end;i++)
	{
		asm(" NOP");
		RST_WD;
	}
}



